@import "tailwindcss";

@custom-variant dark (&:is(.dark *));

:root {
	/* Design Tokens */
	--theme: hsl(24, 90%, 47%);
	--background: hsl(0, 0%, 98%);
	--foreground: hsl(0, 0%, 0%);
	--border: hsl(0, 0%, 90%);
	--code: hsl(225, 77%, 5%);
	--primary: hsl(240, 5%, 11%);
	--primary-foreground: hsl(0, 0%, 98%);
	--secondary: hsl(240, 4%, 96%);
	--secondary-foreground: hsl(240, 5%, 11%);
	--muted: hsl(240, 4%, 96%);
	--muted-foreground: hsl(240, 3%, 46%);
	--accent: hsl(240, 4%, 96%);
	--accent-foreground: hsl(240, 5%, 11%);
	--destructive: hsl(0, 76%, 51%);
	--destructive-foreground: hsl(0, 0%, 98%);
	--radius: 0.5rem;
	--translate-y: 24px;
}

.dark {
	--theme: hsl(51, 97%, 64%);
	--background: hsl(0, 0%, 0%);
	--foreground: hsl(0, 0%, 98%);
	--border: hsl(0, 0%, 25%);
	--code: hsl(222, 56%, 12%);
	--primary: hsl(0, 0%, 98%);
	--primary-foreground: hsl(240, 5%, 11%);
	--secondary: hsl(240, 3%, 15%);
	--secondary-foreground: hsl(0, 0%, 98%);
	--muted: hsl(240, 3%, 15%);
	--muted-foreground: hsl(240, 4%, 65%);
	--accent: hsl(240, 3%, 15%);
	--accent-foreground: hsl(0, 0%, 98%);
	--destructive: hsl(0, 89%, 80%);
	--destructive-foreground: hsl(0, 0%, 98%);
}

@theme {
	--font-sans: var(--font-geist-sans);
	--font-mono: var(--font-geist-mono);
	--font-geist-sans: var(--font-geist-sans);
	--font-geist-mono: var(--font-geist-mono);
	--color-theme: var(--theme);
	--color-background: var(--background);
	--color-foreground: var(--foreground);
	--color-border: var(--border);
	--color-code: var(--code);
	--color-primary: var(--primary);
	--color-primary-foreground: var(--primary-foreground);
	--color-secondary: var(--secondary);
	--color-secondary-foreground: var(--secondary-foreground);
	--color-muted: var(--muted);
	--color-muted-foreground: var(--muted-foreground);
	--color-accent: var(--accent);
	--color-accent-foreground: var(--accent-foreground);
	--color-destructive: var(--destructive);
	--color-destructive-foreground: var(--destructive-foreground);
	--radius: var(--radius);
	--breakpoint-2xl: 1400px;
}

/* Utilities */
@utility container {
	margin-inline: auto;
	padding-inline: 1rem;
}

@utility scrollbar-hide {
	-ms-overflow-style: none;
	scrollbar-width: none;
	&::-webkit-scrollbar {
		display: none;
	}
}

@utility card-border {
	&::before {
		content: "";
		position: absolute;
		inset: 0;
		border-radius: calc(var(--radius) + 4px);
		padding: 1px;
		background: linear-gradient(135deg, var(--color-border), transparent);
		mask:
			linear-gradient(#fff, #fff) content-box,
			linear-gradient(#fff, #fff);
		mask-composite: exclude;
		pointer-events: none;
	}
}

@utility animate-marquee {
	animation: marquee var(--duration, 40s) linear infinite;
}

@utility animate-marquee-vertical {
	animation: marquee-vertical var(--duration, 40s) linear infinite;
}

/* Base Styles */
html {
	min-width: 360px;
}

body {
	height: 100vh;
	text-rendering: optimizeLegibility;
}

@supports (-webkit-touch-callout: none) {
	body {
		height: -webkit-fill-available;
	}
}

/* Typography */
h1,
h2,
h3,
h4 {
	text-wrap: balance;
}

/* Code Blocks */
pre {
	@apply bg-code rounded-md p-4 my-6 overflow-x-auto;
	line-height: 1.5;
}

code {
	@apply bg-muted rounded px-1.5 py-0.5 text-sm font-mono;
}

pre code {
	@apply bg-transparent p-0 text-sm;
}

/* Selection */
::selection {
	@apply bg-theme text-white dark:text-black;
}

/* Hover Effects */
@media (hover: hover) {
	.animated-list:hover li {
		opacity: 0.5;
	}
	.animated-list:hover li:hover {
		opacity: 1;
	}
}

/* Input Normalization */
input[type="text"],
input[type="email"] {
	-webkit-appearance: none;
	appearance: none;
}

/* View Transitions */
.transition-element {
	view-transition-name: florin-transition;
}

::view-transition-old(florin-transition) {
	animation: fade-out 0.8s ease-in-out;
}

::view-transition-new(florin-transition) {
	animation: fade-in-up 0.4s ease-in-out;
}

@keyframes fade-out {
	0% {
		transform: translateY(0) translateX(-0.2px);
		opacity: 1;
	}
	100% {
		transform: translateY(var(--translate-y)) translateX(-0.2px);
		opacity: 0;
	}
}

@keyframes fade-in-up {
	0% {
		transform: translateY(var(--translate-y)) translateX(-0.2px);
		opacity: 0;
	}
	100% {
		transform: translateY(0) translateX(-0.2px);
		opacity: 1;
	}
}

@supports (view-transition-name: none) {
	.fade-in {
		animation: fade-in 0.8s ease-in-out forwards;
		opacity: 0;
	}
}

@keyframes fade-in {
	0% {
		opacity: 0;
	}
	100% {
		opacity: 1;
	}
}

/* Marquee Animations */
@keyframes marquee {
	from {
		transform: translateX(0);
	}
	to {
		transform: translateX(calc(-100% - var(--gap)));
	}
}

@keyframes marquee-vertical {
	from {
		transform: translateY(0);
	}
	to {
		transform: translateY(calc(-100% - var(--gap)));
	}
}
